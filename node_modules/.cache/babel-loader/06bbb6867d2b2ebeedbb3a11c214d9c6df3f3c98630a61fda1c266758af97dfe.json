{"ast":null,"code":"const nameInput = document.querySelector(\"#name\");\nconst emailInput = document.querySelector(\"#email\");\nconst messageInput = document.querySelector(\"#message\");\nconst success = document.querySelector(\"#success\");\nconst error = document.querySelectorAll(\".error\");\n\n/* The function will validate the form if there is a name and email and messages have a input and \r\nFollow the requirement if its valid\r\n*/\n\nexport function validateForm() {\n  let errorMessage = false;\n  if (nameInput.value.length < 1) {\n    error[0].innerText = \"\\u0021 Name cannot be blank\";\n    nameInput.classList.add(\"error\");\n    errorMessage = true;\n  }\n  if (!validEmail(emailInput.value)) {\n    error[1].innerText = \"\\u0021 Invalid Email Address\";\n    emailInput.classList.add(\"error\");\n    errorMessage = true;\n  }\n  if (messageInput.value.length < 1) {\n    error[2].innerText = \"\\u0021 Please Enter a Message\";\n    messageInput.classList.add(\"error\");\n    errorMessage = true;\n  }\n  if (!errorMessage) {\n    success.innerText = \"Message Sent\";\n    window.history.back();\n  }\n}\n\n// call the function for validateForm and wil clear the input if its reload\nfunction clearMessage() {\n  for (let i = 0; i < error.length; i++) {\n    error[i].innerText = \"\";\n  }\n  success.innerText = \"\";\n  nameInput.classList.remove(\"error\");\n  emailInput.classList.remove(\"error\");\n  messageInput.classList.remove(\"error\");\n}\n\n//this will check the email if its an valid email\nfunction validEmail(emailInput) {\n  let symbol = /\\S+@\\S+\\.\\S+/;\n  return symbol.test(emailInput);\n}","map":{"version":3,"names":["nameInput","document","querySelector","emailInput","messageInput","success","error","querySelectorAll","validateForm","errorMessage","value","length","innerText","classList","add","validEmail","window","history","back","clearMessage","i","remove","symbol","test"],"sources":["C:/Users/Medallada/official-portfolio/src/scripts/formValidation.js"],"sourcesContent":["const nameInput = document.querySelector(\"#name\");\r\n            const emailInput = document.querySelector(\"#email\");\r\n            const messageInput = document.querySelector(\"#message\");\r\n            const success = document.querySelector(\"#success\")\r\n            const error = document.querySelectorAll(\".error\")\r\n            \r\n            /* The function will validate the form if there is a name and email and messages have a input and \r\n            Follow the requirement if its valid\r\n            */\r\n            \r\n            export function validateForm(){\r\n            \r\n              let errorMessage = false;\r\n            \r\n              if(nameInput.value.length < 1){\r\n                error[0].innerText = \"\\u0021 Name cannot be blank\";\r\n                nameInput.classList.add(\"error\")\r\n                errorMessage = true;\r\n              }\r\n            \r\n              if(!validEmail(emailInput.value)){\r\n                error[1].innerText = \"\\u0021 Invalid Email Address\";\r\n                emailInput.classList.add(\"error\")\r\n                errorMessage = true;\r\n              }\r\n            \r\n              if(messageInput.value.length < 1){\r\n                error[2].innerText = \"\\u0021 Please Enter a Message\";\r\n                messageInput.classList.add(\"error\")\r\n                errorMessage = true;\r\n              } \r\n            \r\n              if (!errorMessage){\r\n                success.innerText = \"Message Sent\"\r\n                window.history.back();\r\n              }\r\n            }\r\n            \r\n            // call the function for validateForm and wil clear the input if its reload\r\n            function clearMessage(){\r\n              for(let i = 0; i < error.length; i++){\r\n                error[i].innerText = \"\";\r\n              }\r\n              success.innerText = \"\";\r\n              nameInput.classList.remove(\"error\")\r\n              emailInput.classList.remove(\"error\")\r\n              messageInput.classList.remove(\"error\")\r\n            }\r\n            \r\n            //this will check the email if its an valid email\r\n            function validEmail(emailInput){\r\n              let symbol = /\\S+@\\S+\\.\\S+/;\r\n              return symbol.test(emailInput);\r\n            }"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACrC,MAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AACnD,MAAME,YAAY,GAAGH,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AACvD,MAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AAClD,MAAMI,KAAK,GAAGL,QAAQ,CAACM,gBAAgB,CAAC,QAAQ,CAAC;;AAEjD;AACZ;AACA;;AAEY,OAAO,SAASC,YAAYA,CAAA,EAAE;EAE5B,IAAIC,YAAY,GAAG,KAAK;EAExB,IAAGT,SAAS,CAACU,KAAK,CAACC,MAAM,GAAG,CAAC,EAAC;IAC5BL,KAAK,CAAC,CAAC,CAAC,CAACM,SAAS,GAAG,6BAA6B;IAClDZ,SAAS,CAACa,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IAChCL,YAAY,GAAG,IAAI;EACrB;EAEA,IAAG,CAACM,UAAU,CAACZ,UAAU,CAACO,KAAK,CAAC,EAAC;IAC/BJ,KAAK,CAAC,CAAC,CAAC,CAACM,SAAS,GAAG,8BAA8B;IACnDT,UAAU,CAACU,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACjCL,YAAY,GAAG,IAAI;EACrB;EAEA,IAAGL,YAAY,CAACM,KAAK,CAACC,MAAM,GAAG,CAAC,EAAC;IAC/BL,KAAK,CAAC,CAAC,CAAC,CAACM,SAAS,GAAG,+BAA+B;IACpDR,YAAY,CAACS,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACnCL,YAAY,GAAG,IAAI;EACrB;EAEA,IAAI,CAACA,YAAY,EAAC;IAChBJ,OAAO,CAACO,SAAS,GAAG,cAAc;IAClCI,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB;AACF;;AAEA;AACA,SAASC,YAAYA,CAAA,EAAE;EACrB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,KAAK,CAACK,MAAM,EAAES,CAAC,EAAE,EAAC;IACnCd,KAAK,CAACc,CAAC,CAAC,CAACR,SAAS,GAAG,EAAE;EACzB;EACAP,OAAO,CAACO,SAAS,GAAG,EAAE;EACtBZ,SAAS,CAACa,SAAS,CAACQ,MAAM,CAAC,OAAO,CAAC;EACnClB,UAAU,CAACU,SAAS,CAACQ,MAAM,CAAC,OAAO,CAAC;EACpCjB,YAAY,CAACS,SAAS,CAACQ,MAAM,CAAC,OAAO,CAAC;AACxC;;AAEA;AACA,SAASN,UAAUA,CAACZ,UAAU,EAAC;EAC7B,IAAImB,MAAM,GAAG,cAAc;EAC3B,OAAOA,MAAM,CAACC,IAAI,CAACpB,UAAU,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}