{"ast":null,"code":"import { validEmail } from '../scripts/form'; // Adjust the path accordingly\n\nfunction gatherFormData(form, fields) {\n  const formData = new FormData(form);\n\n  // Add form-specific values into the data\n  formData.formDataNameOrder = JSON.stringify(fields);\n  formData.formGoogleSheetName = form.dataset.sheet || \"PortfolioSheet\"; // default sheet name\n  formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n  console.log(formData);\n  return formData;\n}\nexport function getFormData(form) {\n  const elements = form.elements;\n  const fields = Object.keys(elements).filter(k => {\n    var _elements$k;\n    return ((_elements$k = elements[k]) === null || _elements$k === void 0 ? void 0 : _elements$k.name) !== \"honeypot\";\n  }).map(k => {\n    const element = elements[k];\n    if (element instanceof HTMLCollection) {\n      if (element.length > 0) {\n        const item = element.item(0);\n        if (item instanceof HTMLInputElement || item instanceof HTMLSelectElement) {\n          return item.name || '';\n        }\n      }\n    } else if (element instanceof HTMLInputElement || element instanceof HTMLSelectElement) {\n      return element.name || '';\n    }\n\n    // Default return value if no valid name found\n    return '';\n  }).filter((item, pos, self) => self.indexOf(item) === pos && item);\n  const formData = new FormData();\n  fields.forEach(name => {\n    const element = elements[name];\n    if (element instanceof HTMLInputElement || element instanceof HTMLSelectElement) {\n      formData.append(name, element.value);\n      if (element.type === 'checkbox' || element.type === 'radio') {\n        const data = [];\n        if (element instanceof HTMLInputElement && element.checked) {\n          data.push(element.value);\n        }\n        formData.append(name, data.join(', '));\n      }\n    }\n  });\n  return formData;\n}\nexport function handleFormSubmit(event) {\n  event.preventDefault();\n  const form = event.target;\n  const data = getFormData(form);\n  const email = data.get('email'); // Get the value of the 'email' field\n\n  if (email && typeof email === 'string' && !validEmail(email)) {\n    const invalidEmail = form.querySelector(\".email-invalid\");\n    if (invalidEmail) {\n      invalidEmail.style.display = \"block\";\n      return;\n    }\n  } else {\n    disableAllButtons(form);\n    const url = form.action;\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    xhr.onreadystatechange = function () {\n      console.log(xhr.status, xhr.statusText);\n      console.log(xhr.responseText);\n      const formElements = form.querySelector(\".form-elements\");\n      if (formElements) {\n        formElements.style.display = \"none\"; // hide form\n      }\n\n      const thankYouMessage = form.querySelector(\".thankyou_message\");\n      if (thankYouMessage) {\n        thankYouMessage.style.display = \"block\";\n      }\n      return;\n    };\n    const encoded = Object.keys(data).map(function (k) {\n      return encodeURIComponent(k) + \"=\" + encodeURIComponent(data.get(k));\n    }).join('&');\n    xhr.send(encoded);\n  }\n}\nexport function loaded() {\n  console.log(\"Contact form submission handler loaded successfully.\");\n  const forms = document.querySelectorAll(\"form.gform\");\n  forms.forEach(form => {\n    form.addEventListener(\"submit\", handleFormSubmit, false);\n  });\n}\ndocument.addEventListener(\"DOMContentLoaded\", loaded, false);\nexport function disableAllButtons(form) {\n  const buttons = form.querySelectorAll(\"button\");\n  for (let i = 0; i < buttons.length; i++) {\n    buttons[i].disabled = true;\n  }\n}","map":{"version":3,"names":["validEmail","gatherFormData","form","fields","formData","FormData","formDataNameOrder","JSON","stringify","formGoogleSheetName","dataset","sheet","formGoogleSendEmail","email","console","log","getFormData","elements","Object","keys","filter","k","_elements$k","name","map","element","HTMLCollection","length","item","HTMLInputElement","HTMLSelectElement","pos","self","indexOf","forEach","append","value","type","data","checked","push","join","handleFormSubmit","event","preventDefault","target","get","invalidEmail","querySelector","style","display","disableAllButtons","url","action","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","status","statusText","responseText","formElements","thankYouMessage","encoded","encodeURIComponent","send","loaded","forms","document","querySelectorAll","addEventListener","buttons","i","disabled"],"sources":["C:/Users/Medallada/official-portfolio/src/scripts/message.ts"],"sourcesContent":["import { validEmail } from '../scripts/form'; // Adjust the path accordingly\r\n\r\ninterface CustomFormData extends FormData {\r\n    formDataNameOrder?: string;\r\n    formGoogleSheetName?: string;\r\n    formGoogleSendEmail?: string;\r\n}\r\n\r\nfunction gatherFormData(form: HTMLFormElement, fields: string[]): CustomFormData {\r\n    const formData: CustomFormData = new FormData(form);\r\n\r\n    // Add form-specific values into the data\r\n    formData.formDataNameOrder = JSON.stringify(fields);\r\n    formData.formGoogleSheetName = form.dataset.sheet || \"PortfolioSheet\"; // default sheet name\r\n    formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\r\n\r\n    console.log(formData);\r\n    return formData;\r\n}\r\n\r\nexport function getFormData(form: HTMLFormElement): FormData {\r\n    const elements = form.elements as HTMLFormControlsCollection & {\r\n    [key: string]: HTMLInputElement | HTMLSelectElement;\r\n    };\r\n      \r\n      const fields: string[] = Object.keys(elements)\r\n        .filter((k) => elements[k]?.name !== \"honeypot\")\r\n        .map((k) => {\r\n          const element = elements[k];\r\n          if (element instanceof HTMLCollection) {\r\n            if (element.length > 0) {\r\n              const item = element.item(0);\r\n              if (item instanceof HTMLInputElement || item instanceof HTMLSelectElement) {\r\n                return item.name || '';\r\n              }\r\n            }\r\n          } else if (element instanceof HTMLInputElement || element instanceof HTMLSelectElement) {\r\n            return element.name || '';\r\n          }\r\n          \r\n          // Default return value if no valid name found\r\n          return '';\r\n          \r\n        })\r\n        .filter((item, pos, self) => self.indexOf(item) === pos && item);\r\n\r\n  \r\n        const formData = new FormData();\r\n        fields.forEach((name) => {\r\n          const element = elements[name];\r\n        \r\n          if (element instanceof HTMLInputElement || element instanceof HTMLSelectElement) {\r\n            formData.append(name, element.value);\r\n        \r\n            if (element.type === 'checkbox' || element.type === 'radio') {\r\n              const data = [];\r\n              if (element instanceof HTMLInputElement && element.checked) {\r\n                data.push(element.value);\r\n              }\r\n              formData.append(name, data.join(', '));\r\n            }\r\n          }\r\n        });\r\n        return formData;\r\n    }\r\n\r\n  \r\n  export function handleFormSubmit(event: Event): void {\r\n    event.preventDefault();\r\n    const form = event.target as HTMLFormElement;\r\n    const data = getFormData(form);\r\n    \r\n    const email = data.get('email'); // Get the value of the 'email' field\r\n\r\n    if (email && typeof email === 'string' && !validEmail(email)) {\r\n      const invalidEmail = form.querySelector(\".email-invalid\") as HTMLElement;\r\n      if (invalidEmail) {\r\n          invalidEmail.style.display = \"block\";\r\n          return;\r\n      }\r\n  }\r\n     else {\r\n      disableAllButtons(form);\r\n      const url = form.action;\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('POST', url);\r\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n      xhr.onreadystatechange = function () {\r\n          console.log(xhr.status, xhr.statusText);\r\n          console.log(xhr.responseText);\r\n          const formElements = form.querySelector(\".form-elements\") as HTMLElement;\r\n          if (formElements) {\r\n              formElements.style.display = \"none\"; // hide form\r\n          }\r\n          const thankYouMessage = form.querySelector(\".thankyou_message\") as HTMLElement;\r\n          if (thankYouMessage) {\r\n              thankYouMessage.style.display = \"block\";\r\n          }\r\n          return;\r\n      };\r\n      const encoded = Object.keys(data).map(function (k) {\r\n        return encodeURIComponent(k) + \"=\" + encodeURIComponent(data.get(k) as string);\r\n    }).join('&');\r\n    xhr.send(encoded);\r\n  }\r\n  }\r\n  \r\n  export function loaded(): void {\r\n    console.log(\"Contact form submission handler loaded successfully.\");\r\n    const forms = document.querySelectorAll(\"form.gform\");\r\n    forms.forEach((form) => {\r\n      form.addEventListener(\"submit\", handleFormSubmit, false);\r\n  });\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", loaded, false);\r\n  \r\n  export function disableAllButtons(form: HTMLFormElement): void {\r\n    const buttons = form.querySelectorAll(\"button\");\r\n    for (let i = 0; i < buttons.length; i++) {\r\n      buttons[i].disabled = true;\r\n    }\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}